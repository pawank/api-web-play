play.http.secret.key="?`wdc6<s]M--pawan7827328h34343=Z4VG][lSu1d48pxr;`FvQOl4H^XfvAJX5G<9W`jmSi/?XaFvT9hGb"

play.i18n.langs=["en"]

play.assets {
  path = "/public"
  urlPrefix = "/assets"
}

# Session timeout
# ~~~~~
# Just like for the cookie session, you can use this key to specify the duration,
# in milliseconds or using the duration syntax (for example 30m or 1h),
# after which the user should be logout, which mean the token will no longer be valid.
# It means you need to refresh the expiration date at each request
play.http.session.maxAge=30s


# Modules
# ~~~~~
# AssetsModule injected in Controller which in turn is injected in view pages to import static resources.
play.modules {
  enabled += controllers.AssetsModule
}

# Response Header name
# ~~~~~
# You can change the name of the response header in which the token should be stored.
# Akka HTTP Server does not allow Authorization as Response Header.
# Default: Authorization
play.http.session.jwtResponseName="JWT-Token"

# Token prefix
# ~~~~~
# Authorization header should have a prefix before the token, like "Basic" for example.
# For a JWT token, it should be "Bearer" (which is the default value) but you can freely
# change or remove it (using an empty string). The token prefix will be directly prepend
# before the token, so be sure to put any necessary whitespaces in it.
# Default: "Bearer "
# play.http.session.tokenPrefix="Bearer "


play.filters {

  # Disabled CSRFFilter in this example in order to perform authentication
  disabled += play.filters.csrf.CSRFFilter

  headers {
    contentSecurityPolicy="default-src 'self'; script-src 'self' ajax.googleapis.com rawgit.com"
  }

  hosts {
    # Allow requests to example.com, its subdomains, and localhost:9000.
    # allowed = [".herokuapp.com", "localhost:9000"]
  }
}
